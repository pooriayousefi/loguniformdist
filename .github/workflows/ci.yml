name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        compiler: [gcc, clang, msvc]
        exclude:
          - os: ubuntu-latest
            compiler: msvc
          - os: windows-latest
            compiler: gcc
          - os: windows-latest
            compiler: clang
          - os: macos-latest
            compiler: msvc
          - os: macos-latest
            compiler: gcc

    steps:
    - uses: actions/checkout@v4

    - name: Set up C++ (Linux/GCC)
      if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'gcc'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-11 g++-11 cmake
        echo "CC=gcc-11" >> $GITHUB_ENV
        echo "CXX=g++-11" >> $GITHUB_ENV

    - name: Set up C++ (Linux/Clang)
      if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'clang'
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-14 cmake
        echo "CC=clang-14" >> $GITHUB_ENV
        echo "CXX=clang++-14" >> $GITHUB_ENV

    - name: Set up C++ (macOS/Clang)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake

    - name: Set up C++ (Windows/MSVC)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      run: cmake --preset=default

    - name: Build
      run: cmake --build build/default

    - name: Test
      working-directory: build/default
      run: ctest --output-on-failure
